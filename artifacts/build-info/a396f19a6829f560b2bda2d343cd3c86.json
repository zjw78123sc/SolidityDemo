{
	"id": "a396f19a6829f560b2bda2d343cd3c86",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"11Loop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract Loop{\n    function loop() pure public {\n        // for loop\n        for (uint256 i = 0; i < 10; i++) {\n            if (i == 3) {\n                // Skip to next iteration with continue\n                continue;\n            }\n            if (i == 5) {\n                // Exit loop with break\n                break;\n            }\n        }\n\n        // while loop\n        uint256 j;\n        while (j < 10) {\n            j++;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"11Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"11Loop.sol\":58:506  contract Loop{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"11Loop.sol\":58:506  contract Loop{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa92100cb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"11Loop.sol\":77:504  function loop() pure public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"11Loop.sol\":140:149  uint256 i */\n      0x00\n        /* \"11Loop.sol\":135:404  for (uint256 i = 0; i < 10; i++) {... */\n    tag_7:\n        /* \"11Loop.sol\":159:161  10 */\n      0x0a\n        /* \"11Loop.sol\":155:156  i */\n      dup2\n        /* \"11Loop.sol\":155:161  i < 10 */\n      lt\n        /* \"11Loop.sol\":135:404  for (uint256 i = 0; i < 10; i++) {... */\n      iszero\n      tag_8\n      jumpi\n        /* \"11Loop.sol\":191:192  3 */\n      0x03\n        /* \"11Loop.sol\":186:187  i */\n      dup2\n        /* \"11Loop.sol\":186:192  i == 3 */\n      sub\n        /* \"11Loop.sol\":182:291  if (i == 3) {... */\n      iszero\n        /* \"11Loop.sol\":268:276  continue */\n      tag_9\n        /* \"11Loop.sol\":182:291  if (i == 3) {... */\n      jumpi\n        /* \"11Loop.sol\":313:314  5 */\n      0x05\n        /* \"11Loop.sol\":308:309  i */\n      dup2\n        /* \"11Loop.sol\":308:314  i == 5 */\n      sub\n        /* \"11Loop.sol\":304:394  if (i == 5) {... */\n      iszero\n        /* \"11Loop.sol\":374:379  break */\n      tag_8\n        /* \"11Loop.sol\":304:394  if (i == 5) {... */\n      jumpi\n        /* \"11Loop.sol\":135:404  for (uint256 i = 0; i < 10; i++) {... */\n    tag_9:\n        /* \"11Loop.sol\":163:166  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"11Loop.sol\":135:404  for (uint256 i = 0; i < 10; i++) {... */\n      jump(tag_7)\n    tag_8:\n      pop\n        /* \"11Loop.sol\":436:445  uint256 j */\n      0x00\n        /* \"11Loop.sol\":455:498  while (j < 10) {... */\n    tag_12:\n        /* \"11Loop.sol\":466:468  10 */\n      0x0a\n        /* \"11Loop.sol\":462:463  j */\n      dup2\n        /* \"11Loop.sol\":462:468  j < 10 */\n      lt\n        /* \"11Loop.sol\":455:498  while (j < 10) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"11Loop.sol\":484:487  j++ */\n      dup1\n      dup1\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      swap2\n      pop\n      pop\n        /* \"11Loop.sol\":455:498  while (j < 10) {... */\n      jump(tag_12)\n    tag_13:\n        /* \"11Loop.sol\":105:504  {... */\n      pop\n        /* \"11Loop.sol\":77:504  function loop() pure public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_16:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x11\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:270   */\n    tag_17:\n        /* \"#utility.yul\":230:237   */\n      0x00\n        /* \"#utility.yul\":259:264   */\n      dup2\n        /* \"#utility.yul\":248:264   */\n      swap1\n      pop\n        /* \"#utility.yul\":193:270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:509   */\n    tag_15:\n        /* \"#utility.yul\":315:318   */\n      0x00\n        /* \"#utility.yul\":338:362   */\n      tag_22\n        /* \"#utility.yul\":356:361   */\n      dup3\n        /* \"#utility.yul\":338:362   */\n      tag_17\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":329:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":384:450   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":377:382   */\n      dup3\n        /* \"#utility.yul\":374:451   */\n      sub\n        /* \"#utility.yul\":371:474   */\n      tag_23\n      jumpi\n        /* \"#utility.yul\":454:472   */\n      tag_24\n      tag_16\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":371:474   */\n    tag_23:\n        /* \"#utility.yul\":501:502   */\n      0x01\n        /* \"#utility.yul\":494:499   */\n      dup3\n        /* \"#utility.yul\":490:503   */\n      add\n        /* \"#utility.yul\":483:503   */\n      swap1\n      pop\n        /* \"#utility.yul\":276:509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122062686a17cb3348c4a54a0c003b15570a701cb12b888c411e7d0d62d974489cf564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101258061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063a92100cb14602a575b5f80fd5b60306032565b005b5f5b600a8110156059576003810315604d5760058103156059575b80806001019150506034565b505f5b600a8110156074578080606d9060ad565b915050605c565b50565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f819050919050565b5f60b58260a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820360e45760e36077565b5b60018201905091905056fea264697066735822122062686a17cb3348c4a54a0c003b15570a701cb12b888c411e7d0d62d974489cf564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x59 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH1 0x4D JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH1 0x59 JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x34 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x74 JUMPI DUP1 DUP1 PUSH1 0x6D SWAP1 PUSH1 0xAD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB5 DUP3 PUSH1 0xA4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH1 0xE4 JUMPI PUSH1 0xE3 PUSH1 0x77 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x686A17 0xCB CALLER BASEFEE 0xC4 0xA5 BLOBBASEFEE 0xC STOP EXTCODESIZE ISZERO JUMPI EXP PUSH17 0x1CB12B888C411E7D0D62D974489CF56473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "58:448:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loop_40": {
									"entryPoint": 50,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:512:1",
										"nodeType": "YulBlock",
										"src": "0:512:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nativeSrc": "238:32:1",
													"nodeType": "YulBlock",
													"src": "238:32:1",
													"statements": [
														{
															"nativeSrc": "248:16:1",
															"nodeType": "YulAssignment",
															"src": "248:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "259:5:1",
																"nodeType": "YulIdentifier",
																"src": "259:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "248:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "248:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "193:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "220:5:1",
														"nodeType": "YulTypedName",
														"src": "220:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "230:7:1",
														"nodeType": "YulTypedName",
														"src": "230:7:1",
														"type": ""
													}
												],
												"src": "193:77:1"
											},
											{
												"body": {
													"nativeSrc": "319:190:1",
													"nodeType": "YulBlock",
													"src": "319:190:1",
													"statements": [
														{
															"nativeSrc": "329:33:1",
															"nodeType": "YulAssignment",
															"src": "329:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "356:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "356:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "338:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "338:17:1"
																},
																"nativeSrc": "338:24:1",
																"nodeType": "YulFunctionCall",
																"src": "338:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "329:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "329:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "452:22:1",
																"nodeType": "YulBlock",
																"src": "452:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "454:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "454:16:1"
																			},
																			"nativeSrc": "454:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "454:18:1"
																		},
																		"nativeSrc": "454:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "454:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "377:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "377:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "384:66:1",
																		"nodeType": "YulLiteral",
																		"src": "384:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "374:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "374:2:1"
																},
																"nativeSrc": "374:77:1",
																"nodeType": "YulFunctionCall",
																"src": "374:77:1"
															},
															"nativeSrc": "371:103:1",
															"nodeType": "YulIf",
															"src": "371:103:1"
														},
														{
															"nativeSrc": "483:20:1",
															"nodeType": "YulAssignment",
															"src": "483:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "494:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "501:1:1",
																		"nodeType": "YulLiteral",
																		"src": "501:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:1"
																},
																"nativeSrc": "490:13:1",
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "276:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "305:5:1",
														"nodeType": "YulTypedName",
														"src": "305:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "315:3:1",
														"nodeType": "YulTypedName",
														"src": "315:3:1",
														"type": ""
													}
												],
												"src": "276:233:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063a92100cb14602a575b5f80fd5b60306032565b005b5f5b600a8110156059576003810315604d5760058103156059575b80806001019150506034565b505f5b600a8110156074578080606d9060ad565b915050605c565b50565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f819050919050565b5f60b58260a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820360e45760e36077565b5b60018201905091905056fea264697066735822122062686a17cb3348c4a54a0c003b15570a701cb12b888c411e7d0d62d974489cf564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x59 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH1 0x4D JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH1 0x59 JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x34 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x74 JUMPI DUP1 DUP1 PUSH1 0x6D SWAP1 PUSH1 0xAD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB5 DUP3 PUSH1 0xA4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH1 0xE4 JUMPI PUSH1 0xE3 PUSH1 0x77 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x686A17 0xCB CALLER BASEFEE 0xC4 0xA5 BLOBBASEFEE 0xC STOP EXTCODESIZE ISZERO JUMPI EXP PUSH17 0x1CB12B888C411E7D0D62D974489CF56473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "58:448:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77:427;;;:::i;:::-;;;140:9;135:269;159:2;155:1;:6;135:269;;;191:1;186;:6;182:109;268:8;182:109;313:1;308;:6;304:90;374:5;304:90;135:269;163:3;;;;;;;135:269;;;;436:9;455:43;466:2;462:1;:6;455:43;;;484:3;;;;;:::i;:::-;;;;455:43;;;105:399;77:427::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:77;230:7;259:5;248:16;;193:77;;;:::o;276:233::-;315:3;338:24;356:5;338:24;:::i;:::-;329:33;;384:66;377:5;374:77;371:103;;454:18;;:::i;:::-;371:103;501:1;494:5;490:13;483:20;;276:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "58600",
								"executionCost": "109",
								"totalCost": "58709"
							},
							"external": {
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 506,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062686a17cb3348c4a54a0c003b15570a701cb12b888c411e7d0d62d974489cf564736f6c63430008190033",
									".code": [
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 504,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 161,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 135,
											"end": 404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 135,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 182,
											"end": 291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 268,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 182,
											"end": 291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 313,
											"end": 314,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 304,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 135,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 163,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 163,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 163,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 163,
											"end": 166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 163,
											"end": 166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 163,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 163,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 498,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 455,
											"end": 498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 455,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 455,
											"end": 498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 484,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 455,
											"end": 498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 498,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 455,
											"end": 498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 193,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 248,
											"end": 264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 248,
											"end": 264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 276,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 356,
											"end": 361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 338,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 329,
											"end": 362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 329,
											"end": 362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 374,
											"end": 451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 371,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 454,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 474,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"11Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"11Loop.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"11Loop.sol\":{\"keccak256\":\"0x68ceeb88cadfbbbe7224a1535ec251dc19d59fee13cb57f43968c38a8aa462a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da2e0d053aa5411f7f293c5451fb2f9bbc208dc898106e5a7486da2c8e9351b2\",\"dweb:/ipfs/QmRezTVeWYxkktHD3XSYJfStPqDy1e4LcgWhgoFbKExnfT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"11Loop.sol": {
				"ast": {
					"absolutePath": "11Loop.sol",
					"exportedSymbols": {
						"Loop": [
							41
						]
					},
					"id": 42,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "Loop",
							"nameLocation": "67:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "105:399:0",
										"statements": [
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "168:236:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "186:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "186:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "182:109:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "194:97:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "268:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "313:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "308:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 25,
															"nodeType": "IfStatement",
															"src": "304:90:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "316:78:0",
																"statements": [
																	{
																		"id": 23,
																		"nodeType": "Break",
																		"src": "374:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "155:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "159:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "155:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "148:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "140:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "140:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "152:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "140:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "163:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "163:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "163:3:0"
												},
												"nodeType": "ForStatement",
												"src": "135:269:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "444:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 39,
														"src": "436:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 30,
												"nodeType": "VariableDeclarationStatement",
												"src": "436:9:0"
											},
											{
												"body": {
													"id": 37,
													"nodeType": "Block",
													"src": "470:28:0",
													"statements": [
														{
															"expression": {
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "484:3:0",
																"subExpression": {
																	"id": 34,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 36,
															"nodeType": "ExpressionStatement",
															"src": "484:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 31,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "462:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "466:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"nodeType": "WhileStatement",
												"src": "455:43:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "86:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "90:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "105:0:0"
									},
									"scope": 41,
									"src": "77:427:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 42,
							"src": "58:448:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:474:0"
				},
				"id": 0
			}
		}
	}
}